services:
  train:
    build:
      context: .
      dockerfile: docker/train.Dockerfile
    volumes:
      - ./data:/app/data:ro
      - ./configs:/app/configs:ro
      - ./artifacts:/app/artifacts
    command: ["python", "train/train_als.py", "--config", "configs/train.yaml"]

  serve:
    build:
      context: .                # root of repo
      dockerfile: docker/serve.Dockerfile
    ports:
      - "8000:8000"
    environment:
      MODEL_DIR: /app/artifacts/als
      MOVIES_CSV: /app/data/ml-25m/movies.csv
      FUZZY_THRESHOLD: "70"
      SIM_METRIC: dot 
      NO_COMPONENTS: "32"  
    volumes:
      - ./artifacts:/app/artifacts:ro
      - ./data:/app/data:ro
    command: uvicorn serve.app:app --host 0.0.0.0 --port 8000

  train-lightfm:
    build:
      context: .
      dockerfile: docker/train.Dockerfile
    environment:
      RATINGS_CSV: /app/data/ml-25m/ratings.csv
      MODEL_DIR: /app/artifacts/lightfm
      EPOCHS: "20"
      NUM_THREADS: "4"
      MIN_RATING_POS: "3.0"
    volumes:
      - ./data:/app/data:ro
      - ./artifacts:/app/artifacts
    command: ["python", "train/train_lightfm.py"]

  serve-lightfm:
    build:
      context: .
      dockerfile: docker/serve.Dockerfile
    ports:
      - "8001:8000"
    environment:
      MODEL_DIR: /app/artifacts/lightfm
      MOVIES_CSV: /app/data/ml-25m/movies.csv
      FUZZY_THRESHOLD: "70"
      SIM_METRIC: "cosine"
      MIN_LIKES_FOR_EMBED: "3"
      CANDIDATE_POOL: "1200"
      CANDIDATE_POOL_POP: "300"
      CANDIDATE_POOL_SIM_PER_LIKE: "400"
      BETA_BIAS: "0"
      MMR_LAMBDA: "0.25"
      PER_GENRE_CAP: "2"
    volumes:
      - ./artifacts:/app/artifacts:ro
      - ./data:/app/data:ro
    command: uvicorn serve.app_lightfm:app --host 0.0.0.0 --port 8000

  hydrate-tmdb:
    build:
      context: .
      dockerfile: docker/hydrate.Dockerfile
    environment:
      - TMDB_API_KEY=${TMDB_API_KEY}
    volumes:
      - ./tools:/app/tools:ro
      - ./data:/app/data               # writeable (no :ro)
    command: >
      python tools/hydrate_tmdb_min.py data/ids/movie_ids.json.gz 1000
    # ↑ change 1000 → (omit) for a full run

  embed-content:
    build:
      context: .
      dockerfile: docker/embed.Dockerfile
    volumes:
      - ./tools:/app/tools:ro
      - ./data:/app/data:ro
      - ./artifacts:/app/artifacts
    command: >
      python tools/embed_movies.py data/movies.ndjson artifacts

  serve-content:
    build:
      context: .
      dockerfile: docker/serve.Dockerfile
    ports:
      - "8002:8000"
    environment:
      CONTENT_ITEM_IDS: /app/artifacts/item_ids.npy
      CONTENT_VECS: /app/artifacts/item_vecs_norm.npy
      CONTENT_META: /app/artifacts/meta.json
      # lightweight knobs (optional)
      LANG_BOOST: "0.08"
      GENRE_BOOST: "0.05"
      MMR_LAMBDA: "0.75"
      TOPK: "40"
    volumes:
      - ./artifacts:/app/artifacts:ro
      - ./serve:/app/serve:ro
    command: uvicorn serve.app_content:app --host 0.0.0.0 --port 8000

    